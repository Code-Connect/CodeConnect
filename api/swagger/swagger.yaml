# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: CodeConnect API
  description: The API for the CodeConnect
  version: "1.0.0"
# the domain of the service
host: api.uber.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /postccrepo:
    post:
      summary: Add Project
      description: |
        Adds a Github project to the CodeConnect platform.
      parameters:
        - name: ccrepos
          in: body
          description: add a github project to CodeConnect
          required: true
          schema:
            $ref: '#/definitions/ccrepo'
      tags:
        - Estimates
      responses:
        200:
          description: "done"

  /posttask:
    post:
      summary: Post Task
      description: You can add a task to a specific project to the Database
      parameters:
        - name: task
          in: body
          description: add a github project to CodeConnect
          required: true
          schema:
            $ref: '#/definitions/task'
      responses:
        200:
          description: Sends the task back which got added to the database
          schema:
            $ref: '#/definitions/taskrequest'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /auth/github:
    get:
      summary: User Profile
      description: The User Profile endpoint returns information about the Uber user that has authorized with the application.
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /history:
    get:
      summary: User Activity
      description: The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          description: Offset the list of returned results by this amount. Default is zero.
        - name: limit
          in: query
          type: integer
          format: int32
          description: Number of items to retrieve. Default is 5, maximum is 100.
      tags:
        - User
      responses:
        200:
          description: History information for the given user
          schema:
            $ref: '#/definitions/Activities'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  ccrepo:
      type: object
      properties:
        name:
          type: string
          description: Name of the added project
        project_id:
          type: string
          description: Unique identifier representing a specific project
        description:
          type: string
          description: Description of the added repo
        repourl:
          type: string
          description: The github repourl
        tasks:
          type: array
          items:
            $ref: '#/definitions/task'

  task:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      task_id:
        type: integer

  taskrequest:
    type: object
    properties:
      ccrepo_id:
        type: integer
      taskwrapper:
        $ref: '#/definitions/taskwrapper'
      id:
        type: integer
        description: The github ID (user ID)

  taskwrapper:
    type: object
    properties:
      task:
        type: string
        description: just the task name
      description:
        type: string
        description: taskdescription

  Product:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.
      capacity:
        type: string
        description: Capacity of product. For example, 4 people.
      image:
        type: string
        description: Image URL representing the product.
  Profile:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the Uber user.
      last_name:
        type: string
        description: Last name of the Uber user.
      email:
        type: string
        description: Email address of the Uber user
      picture:
        type: string
        description: Image URL of the Uber user.
      promo_code:
        type: string
        description: Promo code of the Uber user.
  Activity:
    type: object
    properties:
      uuid:
        type: string
        description: Unique identifier for the activity
  Activities:
    type: object
    properties:
      offset:
        type: integer
        format: int32
        description: Position in pagination.
      limit:
        type: integer
        format: int32
        description: Number of items to retrieve (100 max).
      count:
        type: integer
        format: int32
        description: Total number of items available.
      history:
        type: array
        items:
          $ref: '#/definitions/Activity'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
